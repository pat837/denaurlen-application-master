@use './../../../../styles/utils/mixins';
@use './../../../../styles/utils/theme';
@use './../../../../styles/utils/variables' as var;

.card {
  @include theme.radius('m');
  padding: 1rem;
  display: grid;
  gap: 1.8rem;
  border: 2px solid map-get($map: var.$background-color, $key: 'wrapper');

  .header {
    display: flex;
    align-items: center;
    justify-content: space-between;

    h5 {
      @include theme.title1;
      @include theme.text-color('secondary');
      display: flex;
      gap: 0.5rem;
      &::before {
        @include theme.radius('max');
        content: '';
        height: 1.75rem;
        width: 0.2rem;
        display: block;
        background-color: map-get($map: var.$text-color, $key: 'disabled');
      }
    }
  }

  .options {
    display: flex;
    align-items: center;
    gap: 0.25rem;

    .separator {
      display: block;
      width: 0.1rem;
      height: 1.6rem;
      @include theme.bg-color('surface');
    }

    .icon {
      $size: 1.46rem;
      width: $size;
      height: $size;
    }
    .loading {
      aspect-ratio: 1 / 1;
      animation: rotation 1400ms linear 0s infinite normal forwards;
    }
    svg {
      width: 1.4rem;
    }
  }

  .graph_wrapper {
    display: block;
    width: 100%;
    aspect-ratio: 1 / 1 !important;
  }
}

.labels {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  list-style: none;

  li {
    display: flex;
    align-items: center;
    justify-content: space-between;

    .label_wrapper {
      display: flex;
      align-items: center;
      gap: 0.5rem;

      .icon {
        @include theme.radius('m');
        $size: 2.6rem;
        width: $size;
        height: $size;
        display: grid;
        place-items: center;

        svg {
          $size: 1.6rem;
          width: $size;
          height: $size;
          color: rgba(255, 255, 255, 0.85);
        }

        &.dark {
          svg {
            color: rgba(0, 0, 0, 0.76);
          }
        }
      }
      .label {
        @include theme.title3;
        @include theme.text-color('secondary');
      }
    }
    .value {
      @include theme.title3;
      &::after {
        content: ' %';
      }
    }
  }
}

@keyframes rotation {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}
