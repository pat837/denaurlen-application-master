@use '../../utils/mixins';
@use '../../utils/variables' as var;

$desktop-width: 1120px;

.page {
  width: 100%;
  height: 100vh;
  display: grid;
  place-items: center;
  background-color: map-get($map: var.$background-color, $key: 'wrapper');
  overflow: hidden;
}

.wrapper {
  width: 100%;
  max-width: 471px;
  height: 100vh;

  display: flex;
  flex-direction: column;
  gap: var.$root-padding;

  background-color: map-get($map: var.$background-color, $key: 'card');
  box-sizing: var.$shadow;

  overflow: auto;

  @media screen and (min-width: $desktop-width) {
    max-width: 1080px;
    height: min-content !important;
    border-radius: map-get($map: var.$border-radius, $key: 'l');
  }
}
.heading {
  padding: var.$root-padding;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;

  h3 {
    @include mixins.heading5;
  }

  .fix {
    width: 38px;
  }
}
.slot_wrapper {
  margin-bottom: 2rem;
  padding-inline: var.$root-padding;
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var.$root-padding;

  @media screen and (min-width: $desktop-width) {
    grid-template-columns: repeat(5, 1fr);
  }
}

.post_preview,
.post_preview > div {
  width: 100%;
  aspect-ratio: map-get($map: var.$aspect-ratio, $key: 'premium');
  background-color: map-get($map: var.$background-color, $key: 'surface') !important;
  border-radius: map-get($map: var.$border-radius, $key: 'm') !important;
  overflow: hidden !important;
}
.post_preview > div {
  position: relative;
  span {
    $radius: map-get(
      $map: var.$border-radius,
      $key: 'm'
    );
    @include mixins.background-blur();
    @include mixins.body1();

    position: absolute;
    inset: 0.5rem 0.5rem auto auto;
    width: 2.6rem;
    aspect-ratio: map-get($map: var.$aspect-ratio, $key: 'square');
    display: grid;
    place-items: center;

    border-radius: $radius;

    overflow: hidden;
  }

  svg {
    position: absolute;
    inset: 0;
    margin: auto;
    width: 4.8rem;
    color: map-get($map: var.$text-color, $key: 'secondary');
  }
}

.preview_image {
  position: relative;
  border-radius: map-get($map: var.$border-radius, $key: 'l');
  overflow: hidden;
  min-height: 360px;
  max-height: 570px;

  .edit_button_wrapper {
    position: absolute;
    top: 16px;
    right: 16px;
    .edit_button {
      @include mixins.background-blur();
      @include mixins.body2;

      padding: 0.4em 0.8em;

      color: map-get($map: var.$text-color, $key: 'primary') !important;

      border-radius: map-get($map: var.$border-radius, $key: 'max') !important;
      overflow: hidden !important;
    }
  }
}

.category_card {
  width: 100%;
  aspect-ratio: map-get($map: var.$aspect-ratio, $key: 'square');
  display: flex;
  flex-direction: column;
  align-items: center;

  background-color: map-get($map: var.$background-color, $key: 'surface') !important;
  border-radius: map-get($map: var.$border-radius, $key: 'm') !important;

  svg {
    color: map-get($map: var.$text-color, $key: 'secondary');
  }
  p {
    @include mixins.body1();
    text-transform: capitalize;
    color: map-get($map: var.$text-color, $key: 'secondary');
  }
}

.category_icon_wrapper {
  margin-top: 0.3rem;
  padding-right: 1rem;
  width: min-content !important;
  display: flex;
  align-items: center;
  gap: 0.6rem;

  background-color: map-get($map: var.$background-color, $key: 'wrapper');
  border-radius: map-get($map: var.$border-radius, $key: 'max');

  .icon {
    width: 3.2rem;
    height: 3.2rem;
    display: grid;
    place-items: center;
    background-color: map-get($map: var.$background-color, $key: 'surface');
    border-radius: map-get($map: var.$border-radius, $key: 'max');

    svg {
      $size: 2.4rem;
      width: $size;
      height: $size;
      color: map-get($map: var.$text-color, $key: 'primary');
    }
  }
  .name {
    display: flex;
    align-items: center;
    color: map-get($map: var.$text-color, $key: 'primary');
  }
}

.radio_group {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.6rem;
  @media screen and (min-width: 480px) {
    grid-template-columns: repeat(4, 1fr);
  }
}

.form_control {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
  p {
    @include mixins.body2;
  }
}
