@use '../utils/mixins';
@use '../utils/theme';
@use '../utils/variables' as var;

$sm: 380px;

.page_wrapper {
  @include theme.bg-color(card);
  display: grid;
  place-items: center;
}

.page {
  width: 100%;
  max-width: 70rem;
  min-height: calc(100vh - var(--appbar-height) * 2);
  padding: 1.1rem;
  display: flex;
  flex-direction: column;
  gap: 2.25rem;

  @include mixins.bottom-entry;
  @include mixins.min-width(1080px) {
    min-height: calc(100vh - var(--appbar-height));
  }

  .heading {
    display: flex;
    align-items: flex-end;
    justify-content: space-between;
    &.edit {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }
    span {
      @include mixins.subtitle1();
      color: map-get($map: var.$text-color, $key: 'disabled');
    }
    h2 {
      @include mixins.heading4;
      color: map-get($map: var.$text-color, $key: 'secondary');
    }
  }

  .button_wrapper {
    width: 100% !important;
    display: flex;
    flex-direction: row-reverse;
    align-items: flex-end;
    gap: 1rem;
  }

  .button {
    padding: 6px 12px;
    display: flex;
    align-items: center;
    gap: 4px;

    background-color: map-get($map: var.$background-color, $key: 'surface');
    border-radius: map-get($map: var.$border-radius, $key: 'max');

    span {
      @include mixins.button;
    }
    span,
    svg {
      color: map-get($map: var.$text-color, $key: 'primary');
    }
  }
}

.card_wrapper {
  --columns: 2;
  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);
  gap: 0.8rem;

  @media screen and (min-width: $sm) {
    --columns: 3;
  }
  @media screen and (min-width: 490px) {
    --columns: 4;
  }
  @media screen and (min-width: 700px) {
    --columns: 5;
  }
}

.fix {
  display: none;
  @media screen and (min-width: $sm) {
    display: block;
  }

  @media screen and (min-width: 700px) {
    display: none;
  }
}

.card {
  padding: 16px 6px 12px !important;

  background-color: map-get($map: var.$background-color, $key: 'card') !important;
  border-radius: map-get($map: var.$border-radius, $key: 'm') !important;
  border: 0.16rem solid map-get($map: var.$background-color, $key: 'surface') !important;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;

  .icon {
    svg {
      $size: 74px;
      width: $size;
      height: $size;
      color: map-get($map: var.$text-color, $key: 'secondary');
    }
  }

  .label {
    @include mixins.caption();
    display: flex;
    align-items: center;
    gap: 0.4rem;

    span {
      $size: 1.46rem;
      display: block;
      width: $size;
      height: $size;
      display: grid;
      place-items: center;
      background-color: map-get($map: var.$background-color, $key: 'surface');
      border-radius: map-get($map: var.$border-radius, $key: 'max');
    }
  }
}

.edit_view_wrapper {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    inset: 0 50px 0 0;
    background-color: transparent;
  }
}

.list_wrapper {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  list-style: none;
  counter-reset: priority;
}

.list_item {
  list-style: none;

  display: flex;
  align-items: center;
  gap: 1.25rem;

  &::before {
    content: '●';

    @include mixins.button;

    $size: 36px;
    width: $size;
    height: $size;

    display: grid;
    place-items: center;

    color: map-get($map: var.$text-color, $key: 'primary');

    background-color: map-get($map: var.$background-color, $key: 'wrapper');
    border-radius: map-get($map: var.$border-radius, $key: 'max');
  }
}

.list_wrapper {
  .list_item {
    &::before {
      counter-increment: priority;
      content: counter(priority);
    }
  }
}

.list_item_wrapper {
  flex: 1;
  padding: 8px 18px;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1.1rem;
  background-color: map-get($map: var.$background-color, $key: 'wrapper');
  border-radius: map-get($map: var.$border-radius, $key: 'm');

  cursor: move;

  svg {
    $size: 38px;
    width: $size;
    height: $size;
    color: map-get($map: var.$text-color, $key: 'secondary');
  }
  p {
    @include mixins.body1;
  }
  .dragger {
    margin-left: auto;
    font-size: 1.8rem;
    font-weight: 700;
    color: map-get($map: var.$text-color, $key: 'secondary');
  }
}

.popup {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.2rem;

  .category_section {
    width: 100%;
    max-width: 16rem;
    display: grid;
    place-content: center;
    grid-template-columns: 1fr 1fr;
  }

  .category_name {
    padding-left: 0.8rem;
    display: flex;
    flex-direction: column;
    justify-content: center;

    span {
      width: min-content;
      display: block;
      padding: 0rem 0rem;
      display: grid;
      place-items: center;
      border-radius: map-get($map: var.$border-radius, $key: 'max');
      @include theme.text-color('secondary');
      @include theme.headline1();
    }
    p {
      @include mixins.subtitle1();
    }
  }
  .button_wrapper {
    width: 100%;
    max-width: 18rem;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.2rem;
  }
}

.update_wrapper {
  width: 100%;
  display: grid;
  place-items: center;
  gap: 0.8rem;
  overflow: hidden;

  h3 {
    @include theme.display3();
  }
}

.wrap {
  width: 100%;
  max-width: 50rem;
  max-height: 64vh;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.8rem;
  overflow: auto;

  @include mixins.min-width(360px) {
    grid-template-columns: repeat(3, 1fr);
  }

  @include mixins.min-width(470px) {
    grid-template-columns: repeat(4, 1fr);
  }
  @include mixins.min-width(680px) {
    grid-template-columns: repeat(5, 1fr);
  }
  @include mixins.min-width(720px) {
    grid-template-columns: repeat(4, 1fr);
    gap: 1.2rem;
  }

  & > * {
    @include theme.bg-color('wrapper');
  }
}

.confirm_popup_wrapper {
  width: 100%;
  display: grid;
  place-items: center;
  overflow: hidden;
}

.confirm_popup {
  width: 100%;
  max-width: 460px;
  display: grid;
  place-items: center;
  gap: 2.6rem;

  .preview_section {
    display: grid;
    place-items: center;
    grid-template-columns: 1fr 3rem 1fr;
    gap: 0.2rem;

    svg {
      width: 2.2rem;
      @include theme.text-color('secondary');
    }

    .category_icon {
      display: flex;
      flex-direction: column;
      align-items: center;

      svg {
        width: 7.2rem;
        @include theme.text-color('primary');
      }
    }
  }

  p {
    @include mixins.subtitle1();
    @include theme.text-color('secondary');
    text-align: center;
    line-height: 1.6rem;

    span {
      display: block;
      @include theme.title1();
    }
  }

  .button_wrapper {
    width: 100%;
    max-width: 22rem;
    display: grid;
    gap: 1rem;
    grid-template-columns: 1fr 1fr;
  }
}

.coupon {
  position: relative;
  padding: 0.8rem 1.6rem 0.8rem 0.4rem;
  width: 100%;
  max-width: 26rem;
  display: grid;
  grid-template-columns: auto 6.8rem;
  @include theme.bg-color('surface');
  @include theme.radius('m');

  &::after {
    content: '';
    position: absolute;
    inset: 24% -40px 24% auto;

    @include theme.ratio('square');
    @include theme.radius('max');
    @include theme.bg-color('card');
  }

  .details {
    padding: 0.36rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    h5 {
      span {
        @include theme.title2();
        @include theme.text-color('primary');
        display: block;
      }
      @include theme.headline1();
      @include theme.text-color('secondary');
    }

    span {
      @include theme.body3();
      @include theme.text-color('secondary');
    }
  }

  .icon {
    @include theme.ratio('square');
    display: grid;
    place-items: center;
    border-left: 2px dashed map-get($map: var.$text-color, $key: 'disabled');

    svg {
      width: 74%;
    }
  }
}
